{"version":3,"sources":["components/LoginForm.js","components/Welcome.js","App.js","reportWebVitals.js","index.js"],"names":["LoginForm","props","history","useHistory","useState","username","setUsername","password","setPassword","processing","setProcessing","initialState","grant_type","client_id","onSubmit","a","console","log","location","search","login","headers","axios","url","method","data","qs","stringify","responseType","then","response","window","localStorage","setItem","JSON","jwt","access_token","toast","success","position","POSITION","BOTTOM_CENTER","push","catch","error","error_description","Grid","textAlign","style","height","verticalAlign","Column","maxWidth","Header","as","color","Form","size","Segment","Input","fluid","icon","iconPosition","placeholder","value","onChange","e","target","type","Button","loading","disabled","Welcome","name","setName","getItem","token","decoded","decode","displayName","err","removeItem","Container","text","content","fontSize","fontWeight","marginBottom","marginTop","primary","onClick","clear","Icon","App","className","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2ff13109.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Form, Grid, Header, Segment } from \"semantic-ui-react\";\r\nimport { toast } from \"react-toastify\";\r\nimport axios from \"axios\";\r\nimport qs from \"qs\";\r\n\r\nconst LoginForm = (props) => {\r\n  let history = useHistory();\r\n  // if (window.localStorage.getItem(\"data\")) {\r\n  //   history.push(\"/welcome\");\r\n  // }\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [processing, setProcessing] = useState(false);\r\n\r\n  const initialState = {\r\n    user: \"\",\r\n    login: {\r\n      username: \"\",\r\n      password: \"\",\r\n      grant_type: \"password\",\r\n      client_id: \"aris\",\r\n    },\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    setProcessing(true);\r\n    console.log(\"Device ID from URL:\", props.location.search);\r\n\r\n    // Process Login using authentication service\r\n    const { login } = initialState;\r\n    login.username = username;\r\n    login.password = password;\r\n    login.grant_type = \"password\";\r\n    login.client_id = \"aris\";\r\n\r\n    const headers = { \"Content-Type\": \"application/x-www-form-urlencoded\" };\r\n\r\n    await axios({\r\n      url:\r\n        \"http://acclab.ph:9090/auth/realms/D0808731-D59D-EA11-9C14-98541B2295E9/protocol/openid-connect/token\",\r\n      method: \"POST\",\r\n      data: qs.stringify(login),\r\n      headers: headers,\r\n      responseType: \"json\",\r\n    })\r\n      .then((response) => {\r\n        console.log(response);\r\n        setProcessing(false);\r\n        window.localStorage.setItem(\"data\", JSON.stringify(response));\r\n\r\n        var jwt = response.data;\r\n        localStorage.setItem(\"id_token\", jwt.access_token);\r\n\r\n        toast.success(\"Login Success\", { position: toast.POSITION.BOTTOM_CENTER });\r\n        history.push(\"/welcome\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        setProcessing(false);\r\n        toast.error(error.response.data.error_description || \"Error\", {\r\n          position: toast.POSITION.BOTTOM_CENTER,\r\n        });\r\n      });\r\n  };\r\n  return (\r\n    <Grid textAlign=\"center\" style={{ height: \"100vh\" }} verticalAlign=\"middle\">\r\n      <Grid.Column style={{ maxWidth: 450 }}>\r\n        <Header as=\"h2\" color=\"teal\" textAlign=\"center\">\r\n          Log-in to your account\r\n        </Header>\r\n\r\n        <Form size=\"large\" onSubmit={onSubmit}>\r\n          <Segment>\r\n            <Form.Input\r\n              fluid\r\n              icon=\"user\"\r\n              iconPosition=\"left\"\r\n              placeholder=\"Username\"\r\n              value={username}\r\n              onChange={(e) => setUsername(e.target.value)}\r\n            />\r\n            <Form.Input\r\n              fluid\r\n              icon=\"lock\"\r\n              iconPosition=\"left\"\r\n              placeholder=\"Password\"\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n            <Button color=\"teal\" fluid size=\"large\" loading={processing} disabled={processing}>\r\n              Login\r\n            </Button>\r\n          </Segment>\r\n        </Form>\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Container, Header, Icon } from \"semantic-ui-react\";\r\nimport decode from \"jwt-decode\"; \r\n\r\nconst Welcome = () => {\r\n  const [name, setName] = useState(\"\");\r\n\r\n  let history = useHistory();\r\n  if (window.localStorage.getItem(\"data\") === null) {\r\n    history.push(\"/simple-login\");\r\n  }\r\n\r\n  const logout = () => {\r\n    localStorage.clear();\r\n    history.push(\"/simple-login\");\r\n  };\r\n\r\n  if (name===\"\" ) {\r\n    let token = localStorage.getItem(\"id_token\");\r\n    if (token) {\r\n      const decoded = decode(token);\r\n      console.log(decoded)\r\n      try {\r\n        setName(decoded.displayName);\r\n      } catch (err) {\r\n        history.push(\"/simple-login\");\r\n        localStorage.removeItem(\"id_token\");\r\n      }\r\n    } else {\r\n      history.push(\"/simple-login\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container text>\r\n      <Header\r\n        as=\"h1\"\r\n        content={\"Hi \" + name + \", Welcome!\"}\r\n        style={{\r\n          fontSize: \"4em\",\r\n          fontWeight: \"normal\",\r\n          marginBottom: 0,\r\n          marginTop: \"3em\",\r\n        }}\r\n      />\r\n      <Header\r\n        as=\"h2\"\r\n        content=\"\"\r\n        style={{\r\n          fontSize: \"1.7em\",\r\n          fontWeight: \"normal\",\r\n          marginTop: \"1.5em\",\r\n        }}\r\n      />\r\n      <Button primary size=\"huge\" onClick={logout}>\r\n        Logout\r\n        <Icon name=\"right arrow\" />\r\n      </Button>\r\n    </Container>\r\n  );\r\n};\r\nexport default Welcome;\r\n","import \"./App.css\";\r\nimport LoginForm from \"./components/LoginForm\";\r\nimport Welcome from \"./components/Welcome\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={LoginForm} />\r\n          <Route exact path=\"/simple-login\" component={LoginForm} />\r\n          <Route exact path=\"/welcome\" component={Welcome} />\r\n        </Switch>\r\n      </Router>\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nimport \"semantic-ui-css/semantic.min.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}